name: "CI for builds"

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

env:
  IMAGE_NAME: m1k1o/neko-rooms

jobs:
  build-client:
    runs-on: ubuntu-latest
    #
    # do not run on forks
    #
    if: github.repository_owner == 'm1k1o'
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Change directory
        run: cd ./client
      - 
        name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      - 
        name: Install dependencies
        run: npm install
      - 
        name: Build
        run: npm run build
      - 
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: client
          path: dist

  build-docker:
    needs: build-client
    runs-on: ubuntu-latest
    #
    # do not run on forks
    #
    if: github.repository_owner == 'm1k1o'
    steps:
      - 
        name: Download client artifact
        uses: actions/download-artifact@v2
        with:
          name: client
          path: ./client/dist
      - 
        name: Remove client stage from Dockerfile
        # Change dockerfile: remove first stage - everything between # STAGE 1 and # STAGE 2
        # Replace "--from=frontend /src/dist/" with "./client/dist/"
        run: |
          sed -i '/# STAGE 1/,/# STAGE 2/d' ./Dockerfile
          sed -i 's/--from=frontend \/src\/dist\//.\/client\/dist\//g' ./Dockerfile
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - 
        name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - 
        name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - 
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
